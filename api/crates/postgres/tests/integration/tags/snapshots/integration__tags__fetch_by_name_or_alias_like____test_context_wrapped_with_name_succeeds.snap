---
source: crates/postgres/tests/integration/tags/fetch_by_name_or_alias_like.rs
expression: ctx.queries()
---
[[queries]]
sql = '''
SELECT
  "tags"."id"
FROM
  "tags"
INNER JOIN
  "tag_paths" ON "tag_paths"."descendant_id" = "tags"."id"
  AND "tag_paths"."ancestor_id" <> $1
INNER JOIN
  "tags" AS "tag_ancestors" ON "tag_ancestors"."id" = "tag_paths"."ancestor_id"
LEFT JOIN
  (
    SELECT
      "id",
      unnest("aliases") AS "alias"
    FROM
      "tags"
  ) AS "tags_aliases" ON "tags_aliases"."id" = "tags"."id"
LEFT JOIN
  (
    SELECT
      "id",
      unnest("aliases") AS "alias"
    FROM
      "tags"
  ) AS "tag_ancestors_aliases" ON "tag_ancestors_aliases"."id" = "tag_ancestors"."id"
GROUP BY
  "tags"."id"
HAVING
  bool_or(
    ("tag_ancestors"."name" ILIKE $2)
    OR ("tag_ancestors"."kana" ILIKE $3)
    OR ("tag_ancestors_aliases"."alias" ILIKE $4)
  )
ORDER BY
  bool_or("tags"."name" = $5) DESC,
  bool_or("tags"."kana" = $6) DESC,
  bool_or(COALESCE("tags_aliases"."alias" = $7, $8)) DESC,
  MAX(
    (
      array_length(
        string_to_array(UPPER("tags"."name"), UPPER($9)),
        $10
      )
    ) - $11
  ) DESC,
  SUM(
    (
      array_length(
        string_to_array(UPPER("tags"."name"), UPPER($12)),
        $13
      )
    ) - $14
  ) DESC,
  (
    MIN(
      NULLIF(strpos(UPPER("tags"."name"), UPPER($15)), $16)
    )
  ) ASC,
  (
    MIN(
      NULLIF(strpos(UPPER("tags"."kana"), UPPER($17)), $18)
    )
  ) ASC,
  bool_or("tag_ancestors"."name" = $19) DESC,
  bool_or("tag_ancestors"."kana" = $20) DESC,
  bool_or(
    COALESCE("tag_ancestors_aliases"."alias" = $21, $22)
  ) DESC,
  MAX(
    (
      array_length(
        string_to_array(UPPER("tag_ancestors"."name"), UPPER($23)),
        $24
      )
    ) - $25
  ) DESC,
  SUM(
    (
      array_length(
        string_to_array(UPPER("tag_ancestors"."name"), UPPER($26)),
        $27
      )
    ) - $28
  ) DESC,
  (
    MIN(
      NULLIF(
        strpos(UPPER("tag_ancestors"."name"), UPPER($29)),
        $30
      )
    )
  ) ASC,
  (
    MIN(
      NULLIF(
        strpos(UPPER("tag_ancestors"."kana"), UPPER($31)),
        $32
      )
    )
  ) ASC,
  "tags"."kana" ASC'''
rows_affected = 7
rows_returned = 7

[[queries]]
sql = '''
SELECT
  "tag_orders"."order",
  "distance",
  "tag_ancestors"."id" AS "ancestor_id",
  "tag_ancestors"."name" AS "ancestor_name",
  "tag_ancestors"."kana" AS "ancestor_kana",
  "tag_ancestors"."aliases" AS "ancestor_aliases",
  "tag_ancestors"."created_at" AS "ancestor_created_at",
  "tag_ancestors"."updated_at" AS "ancestor_updated_at",
  "tag_descendants"."id" AS "descendant_id",
  "tag_descendants"."name" AS "descendant_name",
  "tag_descendants"."kana" AS "descendant_kana",
  "tag_descendants"."aliases" AS "descendant_aliases",
  "tag_descendants"."created_at" AS "descendant_created_at",
  "tag_descendants"."updated_at" AS "descendant_updated_at"
FROM
  "tag_paths"
LEFT JOIN
  (
    SELECT
      "column1" AS "order",
      "column2" AS "id"
    FROM
      (
        VALUES
          ($1, $2),
          ($3, $4),
          ($5, $6),
          ($7, $8),
          ($9, $10),
          ($11, $12),
          ($13, $14),
          ($15, $16)
      ) AS "tag_orders"
  ) AS "tag_orders" ON "tag_orders"."id" = "descendant_id"
  AND "ancestor_id" IN ("descendant_id", $17)
INNER JOIN
  "tags" AS "tag_ancestors" ON "tag_ancestors"."id" = "tag_paths"."ancestor_id"
INNER JOIN
  "tags" AS "tag_descendants" ON "tag_descendants"."id" = "tag_paths"."descendant_id"
WHERE
  (
    "distance" = $18
    AND "ancestor_id" IN ($19, $20, $21, $22, $23, $24, $25)
  )
  OR (
    "distance" <= $26
    AND "descendant_id" IN (
      SELECT
        "ancestor_id"
      FROM
        "tag_paths"
      WHERE
        "distance" <= $27
        AND "descendant_id" IN ($28, $29, $30, $31, $32, $33, $34)
    )
  )
  OR (
    "distance" <= $35
    AND "ancestor_id" IN (
      SELECT
        "descendant_id"
      FROM
        "tag_paths"
      WHERE
        "distance" <= $36
        AND "ancestor_id" IN ($37, $38, $39, $40, $41, $42, $43)
    )
  )
ORDER BY
  "distance" ASC,
  "tag_orders"."order" ASC,
  "tag_ancestors"."kana" ASC,
  "tag_descendants"."kana" ASC'''
rows_affected = 15
rows_returned = 15
