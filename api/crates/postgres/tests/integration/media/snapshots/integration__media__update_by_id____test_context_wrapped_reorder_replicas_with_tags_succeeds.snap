---
source: crates/postgres/tests/integration/media/update_by_id.rs
expression: ctx.queries()
---
[[queries]]
sql = '''
SELECT
  "media"."id",
  "media"."created_at",
  "media"."updated_at",
  "replicas"."id" AS "replica_id"
FROM
  "media"
INNER JOIN
  "replicas" ON "replicas"."medium_id" = "media"."id"
WHERE
  "media"."id" = $1
ORDER BY
  "media"."id" ASC,
  "replicas"."display_order" ASC
FOR UPDATE'''
rows_affected = 3
rows_returned = 3

[[queries]]
sql = '''
UPDATE
  "replicas"
SET
  "display_order" = NULL
WHERE
  "medium_id" = $1'''
rows_affected = 3
rows_returned = 0

[[queries]]
sql = '''
UPDATE
  "replicas"
SET
  "display_order" = $1
WHERE
  "id" = $2'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
UPDATE
  "replicas"
SET
  "display_order" = $1
WHERE
  "id" = $2'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
UPDATE
  "replicas"
SET
  "display_order" = $1
WHERE
  "id" = $2'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
INSERT INTO
  "media_sources" ("medium_id", "source_id")
VALUES
  ($1, $2),
  ($3, $4)
ON CONFLICT
DO NOTHING'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
DELETE FROM
  "media_sources"
WHERE
  "source_id" IN ($1)'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
INSERT INTO
  "media_tags" ("medium_id", "tag_id", "tag_type_id")
VALUES
  ($1, $2, $3),
  ($4, $5, $6)
ON CONFLICT
DO NOTHING'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
DELETE FROM
  "media_tags"
WHERE
  "medium_id" = $1
  AND ("tag_id", "tag_type_id") IN (($2, $3))'''
rows_affected = 1
rows_returned = 0

[[queries]]
sql = '''
UPDATE
  "media"
SET
  "updated_at" = CURRENT_TIMESTAMP,
  "created_at" = $1
WHERE
  "id" = $2
RETURNING
  "id",
  "created_at",
  "updated_at"'''
rows_affected = 1
rows_returned = 1

[[queries]]
sql = '''
SELECT
  "media_tags"."medium_id",
  "media_tags"."tag_id",
  "tag_types"."id" AS "tag_type_id",
  "tag_types"."slug" AS "tag_type_slug",
  "tag_types"."name" AS "tag_type_name",
  "tag_types"."kana" AS "tag_type_kana"
FROM
  "media_tags"
INNER JOIN
  "tag_types" ON "tag_types"."id" = "media_tags"."tag_type_id"
INNER JOIN
  (
    SELECT
      "tags"."id",
      ARRAY_AGG(
        "ancestors"."kana"
        ORDER BY
          "tag_paths"."distance" DESC
      ) AS "display_order"
    FROM
      "tags"
    INNER JOIN
      "tag_paths" ON "tag_paths"."descendant_id" = "tags"."id"
    INNER JOIN
      "tags" AS "ancestors" ON "tag_paths"."ancestor_id" = "ancestors"."id"
    WHERE
      "ancestor_id" <> '00000000-0000-0000-0000-000000000000'
    GROUP BY
      "tags"."id"
    ORDER BY
      "display_order" ASC
  ) AS "ancestors" ON "ancestors"."id" = "media_tags"."tag_id"
WHERE
  "media_tags"."medium_id" IN ($1)
ORDER BY
  "media_tags"."medium_id" ASC,
  "tag_types"."kana" ASC,
  "display_order" ASC'''
rows_affected = 2
rows_returned = 2

[[queries]]
sql = '''
SELECT
  "tag_orders"."order",
  "distance",
  "tag_ancestors"."id" AS "ancestor_id",
  "tag_ancestors"."name" AS "ancestor_name",
  "tag_ancestors"."kana" AS "ancestor_kana",
  "tag_ancestors"."aliases" AS "ancestor_aliases",
  "tag_ancestors"."created_at" AS "ancestor_created_at",
  "tag_ancestors"."updated_at" AS "ancestor_updated_at",
  "tag_descendants"."id" AS "descendant_id",
  "tag_descendants"."name" AS "descendant_name",
  "tag_descendants"."kana" AS "descendant_kana",
  "tag_descendants"."aliases" AS "descendant_aliases",
  "tag_descendants"."created_at" AS "descendant_created_at",
  "tag_descendants"."updated_at" AS "descendant_updated_at"
FROM
  "tag_paths"
LEFT JOIN
  (
    SELECT
      "column1" AS "order",
      "column2" AS "id"
    FROM
      (
        VALUES
          ($1, $2), ($3, $4), ($5, $6)) AS "tag_orders"
  ) AS "tag_orders" ON "tag_orders"."id" = "descendant_id"
  AND "ancestor_id" IN (
    "descendant_id",
    '00000000-0000-0000-0000-000000000000'
  )
INNER JOIN
  "tags" AS "tag_ancestors" ON "tag_ancestors"."id" = "tag_paths"."ancestor_id"
INNER JOIN
  "tags" AS "tag_descendants" ON "tag_descendants"."id" = "tag_paths"."descendant_id"
WHERE
  (
    "distance" = 0
    AND "ancestor_id" IN ($7, $8)
  )
  OR (
    "distance" <= 1
    AND "descendant_id" IN (
      SELECT
        "ancestor_id"
      FROM
        "tag_paths"
      WHERE
        "distance" <= $9
        AND "descendant_id" IN ($10, $11)
    )
  )
  OR (
    "distance" <= 1
    AND "ancestor_id" IN (
      SELECT
        "descendant_id"
      FROM
        "tag_paths"
      WHERE
        "distance" <= $12
        AND "ancestor_id" IN ($13, $14)
    )
  )
ORDER BY
  "distance" ASC,
  "tag_orders"."order" ASC,
  "tag_ancestors"."kana" ASC,
  "tag_descendants"."kana" ASC'''
rows_affected = 11
rows_returned = 11

[[queries]]
sql = 'COMMIT'
rows_affected = 0
rows_returned = 0
