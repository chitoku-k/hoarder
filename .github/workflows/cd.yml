name: CD Workflow
on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build ${{ matrix.app }} (${{ matrix.target.platform }})
    strategy:
      matrix:
        app:
          - api
          - ui
        target:
          - label: ubuntu-24.04
            platform: linux/amd64
            multiarch: x86_64-linux-gnu
            ld: /lib64/ld-linux-x86-64.so.2
          - label: ubuntu-24.04-arm
            platform: linux/arm64
            multiarch: aarch64-linux-gnu
            ld: /lib/ld-linux-aarch64.so.1
    runs-on: ${{ matrix.target.label }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/bake-action@v6
        id: build
        with:
          source: .
          files: docker-bake.hcl
          targets: ${{ matrix.app }}
          set: |
            ${{ matrix.app }}.tags=ghcr.io/chitoku-k/hoarder/${{ matrix.app }}
            *.platform=${{ matrix.target.platform }}
            *.args.DEB_BUILD_MULTIARCH=${{ matrix.target.multiarch }}
            *.args.LD=${{ matrix.target.ld }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.output=type=image,push=true,push-by-digest=true
      - name: Save digests
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest=${{ fromJSON(steps.build.outputs.metadata)[matrix.app]['containerimage.digest'] }}
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digests
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.app }}-${{ matrix.target.multiarch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  combine:
    name: Combine ${{ matrix.app }} images
    strategy:
      matrix:
        app:
          - api
          - ui
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download digests
        uses: actions/download-artifact@v5
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.app }}-*
          merge-multiple: true
      - name: Log into Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            --tag=ghcr.io/chitoku-k/hoarder/${{ matrix.app }}:${{ github.ref_name }} \
            $(printf 'ghcr.io/chitoku-k/hoarder/${{ matrix.app }}@sha256:%s ' *)

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - combine
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Set up ID token
        uses: actions/github-script@v7
        id: id-token
        with:
          result-encoding: string
          script: |
            return await core.getIDToken('k8s.chitoku.jp');
      - name: Set context
        run: |
          kubectl config set-cluster k8s.chitoku.jp --server=https://k8s.chitoku.jp
          kubectl config set-credentials github-actions --token=${{ steps.id-token.outputs.result }}
          kubectl config set-context k8s.chitoku.jp --cluster=k8s.chitoku.jp --user=github-actions
          kubectl config use-context k8s.chitoku.jp
      - name: Update images
        run: |
          kubectl set image --field-manager=github-actions deployment/hoarder-api \
            migration=ghcr.io/chitoku-k/hoarder/api:${{ github.ref_name }} \
            api=ghcr.io/chitoku-k/hoarder/api:${{ github.ref_name }}

          kubectl set image --field-manager=github-actions deployment/hoarder-ui \
            ui=ghcr.io/chitoku-k/hoarder/ui:${{ github.ref_name }}
